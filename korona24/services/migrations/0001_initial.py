# Generated by Django 3.2.9 on 2021-12-09 21:42

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('blog', '0002_alter_article_information_markdown'),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Название услуги')),
                ('description', models.TextField(verbose_name='Описание услуги')),
                ('blog_articles', models.ManyToManyField(related_name='services', related_query_name='service', to='blog.Article', verbose_name='Статьи блога')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
            },
        ),
        migrations.CreateModel(
            name='Therapy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Название')),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='therapies', related_query_name='therapy', to='services.service')),
            ],
            options={
                'verbose_name': 'Лечение',
                'verbose_name_plural': 'Виды лечения',
            },
        ),
        migrations.CreateModel(
            name='InformationService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('information_markdown', models.TextField(help_text='Поддерживает markdown.', verbose_name='Дополнительная информация об услуге')),
                ('information_html', models.TextField(editable=False)),
                ('service', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='information_set', related_query_name='information', to='services.service')),
            ],
            options={
                'verbose_name': 'Дополнительная информация',
                'verbose_name_plural': 'Дополнительная информация',
            },
        ),
    ]
